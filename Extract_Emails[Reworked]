#!/usr/bin/env python

import sys
import imaplib
import getpass
import email
import datetime
import email.parser
import re
import csv
from itertools import izip_longest as zip_longest


M = imaplib.IMAP4_SSL('imap.gmail.com')
try:
    M.login('teamndsjaipur@gmail.com', 'nds@2018')
except imaplib.IMAP4.error:
    print "LOGIN FAILED!!! "
    # ... exit or deal with failure...
rv, mailboxes = M.list()

# Note: This function definition needs to be placed
#       before the previous block of code that calls it.
def process_mailbox(M):
  rv, data = M.search(None, '(FROM "rpith07@gmail.com")')
  if rv != 'OK':
      print "No messages found!"
      return


  for num in data[0].split():
      rv, data = M.fetch(num, '(RFC822)')
      if rv != 'OK':
          print "ERROR getting message", num
          return

      msg = email.message_from_string(data[0][1])
      print 'Message %s: %s' % (num, msg['subject'])
      print 'Raw Date:', msg['Date']
      with open('rawdata.txt', 'a') as f:
		  f.write(msg['From']+'\n')
		
      date_tuple = email.utils.parsedate_tz(msg['Date'])
      print 'From', msg['From']
      print '\n'    

			  
rv, data = M.select("INBOX")
if rv == 'OK':
    print "Processing mailbox...\n"
    process_mailbox(M) # ... do something with emails, see below ...
    M.close()
M.logout()


#processing of written data

emails=[]

with open('rawdata.txt', 'r') as f:
    for line in f:
        email = re.findall(r'[\w\.-]+@[\w\.-]+', line)
        for i in email:
            emails.append(i)

d = [set(emails)]
export_data = zip_longest(*d, fillvalue = '')
with open('data.csv', 'a') as myfile:
      wr = csv.writer(myfile)
      wr.writerows(export_data)
myfile.close()
print "Written to CSV file"


